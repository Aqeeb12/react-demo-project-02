{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { GET_LIST } from 'actions/Auth/actionTypes';\nimport { getListSuccess, getListFailure } from 'actions/Auth';\nimport { getRequest } from './request';\nimport { pushNotification } from 'utils/notifications';\nimport URls from 'constants/urls';\n\nfunction* getJsonData(action) {\n  try {\n    const response = yield call(getRequest, URls.GET_LIST);\n\n    if (response.data) {\n      pushNotification('Get data success', 'success', 'TOP_CENTER', 1000);\n      yield put(getListSuccess(response.data));\n    }\n  } catch (error) {\n    pushNotification('Get data failure', 'error', 'TOP_CENTER', 1000);\n    yield put(getListFailure());\n  }\n}\n\nfunction* watchGetRequest() {\n  yield takeLatest(GET_LIST, getJsonData);\n}\n\nexport default function* sagas() {\n  yield all([watchGetRequest()]);\n}","map":{"version":3,"sources":["/Users/vaibhavgurnani/Downloads/redux-saga-boilerplate/src/sagas/authSagas.js"],"names":["all","call","put","takeLatest","GET_LIST","getListSuccess","getListFailure","getRequest","pushNotification","URls","getJsonData","action","response","data","error","watchGetRequest","sagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,cAA/C;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACM,UAAD,EAAaE,IAAI,CAACL,QAAlB,CAA3B;;AACA,QAAIQ,QAAQ,CAACC,IAAb,EAAmB;AACjBL,MAAAA,gBAAgB,CAAC,kBAAD,EAAqB,SAArB,EAAgC,YAAhC,EAA8C,IAA9C,CAAhB;AACA,YAAMN,GAAG,CAACG,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAf,CAAT;AACD;AACF,GAND,CAME,OAAOC,KAAP,EAAc;AACdN,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,OAArB,EAA8B,YAA9B,EAA4C,IAA5C,CAAhB;AACA,UAAMN,GAAG,CAACI,cAAc,EAAf,CAAT;AACD;AACF;;AAED,UAAUS,eAAV,GAA4B;AAC1B,QAAMZ,UAAU,CAACC,QAAD,EAAWM,WAAX,CAAhB;AACD;;AAED,eAAe,UAAUM,KAAV,GAAkB;AAC/B,QAAMhB,GAAG,CAAC,CAACe,eAAe,EAAhB,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { GET_LIST } from 'actions/Auth/actionTypes';\nimport { getListSuccess, getListFailure } from 'actions/Auth';\nimport { getRequest } from './request';\nimport { pushNotification } from 'utils/notifications';\nimport URls from 'constants/urls';\n\nfunction* getJsonData(action) {\n  try {\n    const response = yield call(getRequest, URls.GET_LIST);\n    if (response.data) {\n      pushNotification('Get data success', 'success', 'TOP_CENTER', 1000);\n      yield put(getListSuccess(response.data));\n    }\n  } catch (error) {\n    pushNotification('Get data failure', 'error', 'TOP_CENTER', 1000);\n    yield put(getListFailure());\n  }\n}\n\nfunction* watchGetRequest() {\n  yield takeLatest(GET_LIST, getJsonData);\n}\n\nexport default function* sagas() {\n  yield all([watchGetRequest()]);\n}\n"]},"metadata":{},"sourceType":"module"}