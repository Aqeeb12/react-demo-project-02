{"ast":null,"code":"import { GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE } from 'actions/Auth/actionTypes';\nconst initialState = {\n  getListLoading: false,\n  posts: []\n};\n\nconst getList = (state, action) => ({ ...state,\n  getListLoading: true\n});\n\nconst getListSuccess = (state, action) => {\n  console.log('check the data in reducer', action);\n  return { ...state,\n    getListLoading: false,\n    posts: action.payload\n  };\n};\n\nconst getListFailed = (state, action) => ({ ...state,\n  getListLoading: false,\n  posts: []\n});\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LIST:\n      return getList(state, action);\n\n    case GET_LIST_SUCCESS:\n      return getListSuccess(state, action);\n\n    case GET_LIST_FAILURE:\n      return getListFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/vaibhavgurnani/Downloads/redux-saga-boilerplate/src/reducers/authReducer.js"],"names":["GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","initialState","getListLoading","posts","getList","state","action","getListSuccess","console","log","payload","getListFailed","authReducer","type"],"mappings":"AAAA,SACEA,QADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,0BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,KADG;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAClC,GAAGD,KAD+B;AAElCH,EAAAA,cAAc,EAAE;AAFkB,CAApB,CAAhB;;AAKA,MAAMK,cAAc,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxCE,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,MAAzC;AACA,SAAO,EACL,GAAGD,KADE;AAELH,IAAAA,cAAc,EAAE,KAFX;AAGLC,IAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,GAAP;AAKD,CAPD;;AASA,MAAMC,aAAa,GAAG,CAACN,KAAD,EAAQC,MAAR,MAAoB,EACxC,GAAGD,KADqC;AAExCH,EAAAA,cAAc,EAAE,KAFwB;AAGxCC,EAAAA,KAAK,EAAE;AAHiC,CAApB,CAAtB;;AAMA,MAAMS,WAAW,GAAG,YAAkC;AAAA,MAAjCP,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACO,IAAf;AACE,SAAKf,QAAL;AACE,aAAOM,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAd;;AACF,SAAKP,gBAAL;AACE,aAAOQ,cAAc,CAACF,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKN,gBAAL;AACE,aAAOW,aAAa,CAACN,KAAD,EAAQC,MAAR,CAApB;;AACF;AACE,aAAOD,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeO,WAAf","sourcesContent":["import {\n  GET_LIST,\n  GET_LIST_SUCCESS,\n  GET_LIST_FAILURE,\n} from 'actions/Auth/actionTypes';\n\nconst initialState = {\n  getListLoading: false,\n  posts: [],\n};\n\nconst getList = (state, action) => ({\n  ...state,\n  getListLoading: true,\n});\n\nconst getListSuccess = (state, action) => {\n  console.log('check the data in reducer', action);\n  return {\n    ...state,\n    getListLoading: false,\n    posts: action.payload,\n  };\n};\n\nconst getListFailed = (state, action) => ({\n  ...state,\n  getListLoading: false,\n  posts: [],\n});\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LIST:\n      return getList(state, action);\n    case GET_LIST_SUCCESS:\n      return getListSuccess(state, action);\n    case GET_LIST_FAILURE:\n      return getListFailed(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}